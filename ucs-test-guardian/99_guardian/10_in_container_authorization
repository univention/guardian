#!/usr/share/ucs-test/runner bash
# SPDX-FileCopyrightText: 2023 Univention GmbH
#
# SPDX-License-Identifier: AGPL-3.0-only
#
## desc: run unit tests in container
## tags: [guardian, guardian-authorization-api]
## exposure: dangerous
## packages: []
## bugs: []
## external-junit: /tmp/guardian-in_container_authorization_api.xml


APP="guardian-authorization-api"
/usr/share/guardian/scripts/set_up_tests.sh
univention-app shell guardian-management-api cp /app/management-api/rego_policy_bundle_template/univention/test_mapping/data.json /guardian_service_dir/bundle_server/build/GuardianDataBundle/guardian/mapping/data.json
univention-app shell guardian-management-api opa build -b /guardian_service_dir/bundle_server/build/GuardianDataBundle -o /guardian_service_dir/bundle_server/bundles/GuardianDataBundle.tar.gz

declare -a CMD=(sh -c "
cd /app/tests &&
python3 -m pytest --junit-xml=/tmp/junit.xml --junit-prefix=99_guardian.10_in_container_authorization_api")


echo "Running in container: ${CMD[@]}"

univention-app shell "$APP" "${CMD[@]}" || (rv=$?; pkill -f '^/usr/bin/python.*pytest$'; exit $rv)
rm -f /tmp/guardian-in_container_authorization_api.xml
univention-app shell "$APP" cat /tmp/junit.xml > /tmp/guardian-in_container_authorization_api.xml
univention-app restart guardian-management-api
