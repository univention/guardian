# Copyright (C) 2023 Univention GmbH
#
# SPDX-License-Identifier: AGPL-3.0-only

include:
  - project: univention/infrastructure/docker-services
    file:
      - kaniko.yml
      - pre-commit.yml
  - project: "univention/dev/nubus-for-k8s/common-ci"
    ref: "v1.47.0"
    file:
      - "jobs/container-generate-sbom.yaml"
      - "jobs/generate-filesystem-sbom.yaml"
  - project: 'univention/dev/docs/sphinx-docker'
    file: 'pipeline/sphinx.yml'
  - component: $CI_SERVER_FQDN/univention/dev/internal/ucsschool-ci-utils/app-release@2
    inputs:
      app_id: "guardian-authorization-api"
      job_prefix: "authz-"
      mail_sender: "ucsschool-maintainers@univention.de"
      author_alias: "UCS@school Team"
      changelog_link: "https://docs.software-univention.de/guardian-manual/latest/changelogs.html#authorization-api"
      mail_recipient: "app-announcement@univention.de"
      chat_destination: "#ucsschool"
      ucs_base_version: "5.0"
      additional_update_appcenter_needs:
        - job: build_docker_image_authz
          optional: true
        - job: build_docker_image_opa
          optional: true
        - authz_keycloak_script
      appcenter_file_dir: "appcenter-authz/"
      release_tag_prefix: "authorization-api_"
  - component: $CI_SERVER_FQDN/univention/dev/internal/ucsschool-ci-utils/app-release@2
    inputs:
      app_id: "guardian-management-api"
      job_prefix: "management-"
      mail_sender: "ucsschool-maintainers@univention.de"
      author_alias: "UCS@school Team"
      changelog_link: "https://docs.software-univention.de/guardian-manual/latest/changelogs.html#management-api"
      mail_recipient: "app-announcement@univention.de"
      chat_destination: "#ucsschool"
      ucs_base_version: "5.0"
      additional_update_appcenter_needs:
        - management_keycloak_script
        - job: build_docker_image_management
          optional: true
      appcenter_file_dir: "appcenter-management/"
      release_tag_prefix: "management-api_"
  - component: $CI_SERVER_FQDN/univention/dev/internal/ucsschool-ci-utils/app-release@2
    inputs:
      app_id: "guardian-management-ui"
      job_prefix: "management-ui-"
      mail_sender: "ucsschool-maintainers@univention.de"
      author_alias: "UCS@school Team"
      changelog_link: "https://docs.software-univention.de/guardian-manual/latest/changelogs.html#management-ui"
      mail_recipient: "app-announcement@univention.de"
      chat_destination: "#ucsschool"
      ucs_base_version: "5.0"
      additional_update_appcenter_needs:
        - management-ui_keycloak_script
        - job: build_docker_image_management_ui
          optional: true
      appcenter_file_dir: "appcenter-management-ui/"
      release_tag_prefix: "management-ui_"


variables:
  APPCENTER_CONTROL_IMAGE: "docker-registry.knut.univention.de/knut/univention-appcenter-control"
  POETRY_VERSION: "1.5.1"
  UCS_VERSION: "505"
  UCS_RELEASE: "5.0"
  DEB_IMAGE: docker-registry.knut.univention.de/phahn/ucs-debbase:$UCS_VERSION
  UCSLINT_IMAGE: gitregistry.knut.univention.de/univention/ucs
  SCOPE: "guardian"
  DOCS_DIR: "docs/guardian-manual"
  DOC_TARGET_VERSION: "3.0"
  DOC_TARGET_NAME: "guardian-manual"
  DOC_TARGET_PATH: "$DOC_TARGET_NAME/$DOC_TARGET_VERSION"

#TODO: Stages should be merged and reduced by smart needs
#and handling of the python packages in docker builds
stages:
  - test
  - build_python
  - build_docker
  - package
  - publish
  - build
  - merge
  - release
  - production
  - cleanup

.pre_commit:
  stage: test
  needs: []
  extends: .pre-commit
  variables:
    PRE_COMMIT_IMAGE: "docker-registry.knut.univention.de/knut/pre-commit-opa"

run_precommit_general:
  extends: .pre_commit
  script:
    - export SKIP=$(python3 .gitlab-ci/pre_commit_hook_parser.py .pre-commit-config.yaml general)
    - pre-commit run -a

run_precommit_backend:
  extends: .pre_commit
  script:
    - export SKIP=$(python3 .gitlab-ci/pre_commit_hook_parser.py .pre-commit-config.yaml backend)
    - pre-commit run -a

run_precommit_frontend:
  extends: .pre_commit
  script:
    - export SKIP=$(python3 .gitlab-ci/pre_commit_hook_parser.py .pre-commit-config.yaml frontend)
    - cd /tmp  &&curl https://nodejs.org/download/release/v18.19.0/node-v18.19.0-linux-x64.tar.gz --output node.tar.gz
    - cd /usr/local && tar -xzf /tmp/node.tar.gz --strip-components 1
    - npm install -g yarn
    - cd $CI_PROJECT_DIR
    - yarn --cwd management-ui install
    - pre-commit run -a

# No jobs for OPA code were created, since the form and structure of the OPA code is not final yet. TODO
.coverage:
  stage: test
  image: docker-registry.knut.univention.de/python:3.12-slim
  variables:
    GUARDIAN__MANAGEMENT__BASE_URL: "http://localhost:8001"
    GUARDIAN_COMPONENT: ""
    GUARDIAN_TEST_ARGS: ""
    GUARDIAN_COVERAGE_COMPONENT: ""
    GUARDIAN_COVERAGE_LIMIT: ""
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /skip-build/ || $pipeline =~ /skip-build/"
      when: never
    - if: "$CI_COMMIT_MESSAGE =~ /force-build/ || $pipeline =~ /force-build/"
    - changes:
        - $GUARDIAN_COMPONENT/**/*
  script:
    - cd "$GUARDIAN_COMPONENT"
    - pip install poetry=="$POETRY_VERSION"
    - poetry config --local virtualenvs.create false
    - poetry install
    - pytest -vv "$GUARDIAN_TEST_ARGS" --cov="$GUARDIAN_COVERAGE_COMPONENT" --cov-report=term --cov-report=xml:coverage.xml .
    - coverage report --fail-under="$GUARDIAN_COVERAGE_LIMIT"  # Variable set in Gitlab UI
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $GUARDIAN_COMPONENT/coverage.xml

coverage_management:
  extends: .coverage
  variables:
    GUARDIAN_COMPONENT: "management-api"
    GUARDIAN_TEST_ARGS: "-k not e2e_udm"
    GUARDIAN_COVERAGE_COMPONENT: "guardian_management_api"
    GUARDIAN_COVERAGE_LIMIT: $MANAGEMENT_COVERAGE_LIMIT

coverage_authz:
  extends: .coverage
  variables:
    GUARDIAN_COMPONENT: "authorization-api"
    GUARDIAN_COVERAGE_COMPONENT: "guardian_authorization_api"
    GUARDIAN_COVERAGE_LIMIT: $AUTHZ_COVERAGE_LIMIT

coverage_guardian_lib:
  extends: .coverage
  variables:
    GUARDIAN_COMPONENT: "guardian-lib"
    GUARDIAN_COVERAGE_COMPONENT: "guardian_lib"
    GUARDIAN_COVERAGE_LIMIT: $GUARDIAN_LIB_COVERAGE_LIMIT

container-generate-sbom:
  variables:
    IMAGE_NAME: "guardian-management-ui"
    IMAGE_TAG_ENV_NAME: $IMAGE_TAG
  before_script:
    - echo "TODO use digest from built image"
  script:
    - |
      echo "IMAGE_TAG_ENV_NAME = ${IMAGE_TAG_ENV_NAME}"
    - |
      trivy image \
        --exit-code 0 \
        --format cyclonedx \
        --output sbom-image-${IMAGE_NAME}.cyclonedx.json \
      ${IMAGE_TAG_ENV_NAME}

generate-filesystem-sbom:
  variables:
    FOLDER: "management-ui"

merge-fs-and-image-sboms:
  variables:
    IMAGE_NAME: "guardian-management-ui"
    FOLDER: "management-ui"

build_guardian_lib:
  stage: build_python
  rules:
    - changes:
        - guardian-lib/**/*
  artifacts:
    paths:
      - guardian-lib/dist/
    expire_in: 1 week
  image: docker-registry.knut.univention.de/python:3.12-slim
  script:
    - cd guardian-lib
    - pip install poetry=="$POETRY_VERSION"
    - |-
      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        poetry version "0.0.0.dev0+${CI_COMMIT_REF_SLUG//-/.}.$CI_COMMIT_SHORT_SHA"
      else
        true
      fi
    - poetry config --local virtualenvs.create false
    - poetry build

build_docker_image_opa:
  stage: build_docker
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        REGISTRY: "artifacts.software-univention.de"
        REGISTRY_IMAGE: "$REGISTRY/ucsschool/guardian-opa"
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  extends: .kaniko
  variables:
    IMAGE_TAG_ENV_NAME: "IMAGE_TAG_OPA"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/opa"
    CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/guardian-opa
    KANIKO_ARGS: --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --cache=true --cache-repo=$CI_REGISTRY_IMAGE/cache

build_docker_image_management_ui:
  stage: build_docker
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        REGISTRY: "artifacts.software-univention.de"
        REGISTRY_IMAGE: "$REGISTRY/ucsschool/guardian-management-ui"
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "$CI_PROJECT_DIR/management-ui/docker/Dockerfile"
    CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/guardian-management-ui
    KANIKO_ARGS: --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --cache=true --cache-repo=$CI_REGISTRY_IMAGE/cache

build_docker_image_authz:
  stage: build_docker
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        REGISTRY: "artifacts.software-univention.de"
        REGISTRY_IMAGE: "$REGISTRY/ucsschool/guardian-authorization-api"
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  extends: .kaniko
  variables:
    IMAGE_TAG_ENV_NAME: "IMAGE_TAG_AUTHZ"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/authorization-api"
    CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/guardian-authorization-api
    KANIKO_ARGS: --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --skip-unused-stages --cache=true --cache-repo=$CI_REGISTRY_IMAGE/cache

build_docker_image_management:
  stage: build_docker
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        REGISTRY: "artifacts.software-univention.de"
        REGISTRY_IMAGE: "$REGISTRY/ucsschool/guardian-management-api"
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  extends: .kaniko
  variables:
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/management-api"
    CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/guardian-management-api
    KANIKO_ARGS: --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --skip-unused-stages --cache=true --cache-repo=$CI_REGISTRY_IMAGE/cache

publish_guardian-lib:
  stage: publish
  when: manual
  rules:
    - changes:
        - guardian-lib/**/*
  dependencies:
    - build_guardian_lib
  needs:
    - build_guardian_lib
  image: docker-registry.knut.univention.de/python:3.12-slim
  script:
    - cd guardian-lib
    - pip install poetry=="$POETRY_VERSION"
    - |-
      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        poetry version "0.0.0.dev0+${CI_COMMIT_REF_SLUG//-/.}.$CI_COMMIT_SHORT_SHA"
      else
        true
      fi
    - poetry config --local virtualenvs.create false
    - poetry config --local repositories.project_local ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry publish -r project_local --username gitlab-ci-token --password ${CI_JOB_TOKEN}

.generate_keycloak_script:
  stage: build_docker
  image: gitregistry.knut.univention.de/univention/dev/internal/ucsschool-ci-utils/app-release:latest
  variables:
    APP_NAME: "guardian-authorization-api"
    CONFIGURE_KEYCLOAK_TEMPLATE: "appcenter-authz/includes/configure-keycloak.tmpl"
    KEYCLOAK_TEMP_FILE: "appcenter-authz/includes/keycloak_script.include"
  script:
    - ./appcenter-common/keycloak/generate-configure-keycloak.sh "$APP_NAME" "$CONFIGURE_KEYCLOAK_TEMPLATE" "$KEYCLOAK_TEMP_FILE"
  artifacts:
    paths:
      - ${KEYCLOAK_TEMP_FILE}

authz_keycloak_script:
  extends: .generate_keycloak_script

management_keycloak_script:
  extends: .generate_keycloak_script
  variables:
    APP_NAME: "guardian-management-api"
    CONFIGURE_KEYCLOAK_TEMPLATE: "appcenter-management/includes/configure-keycloak.tmpl"
    KEYCLOAK_TEMP_FILE: "appcenter-management/includes/keycloak_script.include"

management-ui_keycloak_script:
  extends: .generate_keycloak_script
  variables:
    APP_NAME: "guardian-management-ui"
    CONFIGURE_KEYCLOAK_TEMPLATE: "appcenter-management-ui/includes/configure-keycloak.tmpl"
    KEYCLOAK_TEMP_FILE: "appcenter-management-ui/includes/keycloak_script.include"

docs-linkcheck:
  extends: .sphinx-linkcheck-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-spelling:
  extends: .sphinx-spelling-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-html:
  extends: .sphinx-html-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-pdf:
  extends: .sphinx-pdf-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-merge-to-one-artifact:
  extends: .sphinx-merge-template
  needs:
    - job: docs-html
    - job: docs-pdf
    - job: docs-spelling
      artifacts: false
    - job: docs-linkcheck
      artifacts: false
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
      when: manual

docs-review:
  extends: .sphinx-review-template
  needs:
    - job: docs-merge-to-one-artifact
  rules:
    - changes:
      - $DOCS_DIR/**/*

# The template has inherit:variables:false to prevent the passing of pipeline
# variables to downstream, and therefore $DOCS_DIR is not available here.
docs-create-production-merge-request:
  extends: .sphinx-docs-merge-request-template
  needs:
    - job: docs-merge-to-one-artifact
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - docs/guardian-manual/**/*

