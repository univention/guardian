#!/bin/bash

APP="guardian-authorization-api"
mkdir -p ~/test-reports/99_guardian

univention-app configure "$APP"
univention-app restart "$APP"
univention-app configure guardian-management-api
univention-app restart guardian-management-api

udm users/user delete --dn=uid=guardian,cn=users,"$(ucr get ldap/base)" || true

udm users/user create \
  --ignore_exists \
  --set username=guardian \
  --set lastname=app-admin \
  --set password=univention \
  --set guardianRoles=guardian:builtin:app-admin \
  --position cn=users,"$(ucr get ldap/base)"

univention-app restart guardian-management-api && echo "Restarted guardian-management-api"
echo "Waiting for app startup"
sleep 10
univention-app shell guardian-management-api cp /app/management-api/rego_policy_bundle_template/univention/test_mapping/data.json /guardian_service_dir/bundle_server/build/GuardianDataBundle/guardian/mapping/data.json && echo "copied test mapping"
univention-app shell guardian-management-api opa build -b /guardian_service_dir/bundle_server/build/GuardianDataBundle -o /guardian_service_dir/bundle_server/bundles/GuardianDataBundle.tar.gz && echo "Built test mapping OPA bundle"
echo "Waiting for Bundle distribution"
sleep 20
echo "Setup done"

declare -a CMD=(sh -c "
cd /app/tests &&
python3 -m pytest --junit-xml=/tmp/junit.xml --junit-prefix=99_guardian.10_in_container_authorization_api")

echo "Running in container: " "${CMD[@]}"

univention-app shell "$APP" "${CMD[@]}" || (rv=$?; pkill -f '^/usr/bin/python.*pytest$'; exit $rv)
rm -f /tmp/guardian-in_container_authorization_api.xml
univention-app shell "$APP" cat /tmp/junit.xml > ~/test-reports/99_guardian/guardian-in_container_authorization_api.xml
univention-app restart guardian-management-api
